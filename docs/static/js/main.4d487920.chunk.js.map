{"version":3,"sources":["firebase/firebase-config.js","hooks/useForm.js","types/types.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","setError","error","type","payload","uiFinishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","console","message","logout","LoginScreen","formValues","useDispatch","loading","useSelector","state","ui","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","err","startRegistrerWithEmailAndPassword","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","text","allowOutsideClick","showConfirmButton","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIN","setIsLoggedIN","onAuthStateChanged","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4d487920.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD7nZmHMr15CnUFMbfQYbR7phq6Z3bs4O4\",\r\n    authDomain: \"react-app-firebase-4640b.firebaseapp.com\",\r\n    projectId: \"react-app-firebase-4640b\",\r\n    storageBucket: \"react-app-firebase-4640b.appspot.com\",\r\n    messagingSenderId: \"692792453027\",\r\n    appId: \"1:692792453027:web:7fa0f88fefada05d521c16\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logaout Cleaning'\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = (error) => (\r\n    {\r\n        type: types.uiSetError,\r\n        payload: error\r\n    }\r\n)\r\n\r\n\r\nexport const removeError = () => (\r\n    {\r\n        type: types.uiRemoveError\r\n    }\r\n)\r\n\r\nexport const uiStartLoading = () => (\r\n    {\r\n        type: types.uiStartLoading,\r\n        payload: true\r\n    }\r\n)\r\n\r\nexport const uiFinishLoading = () => (\r\n    {\r\n        type: types.uiFinishLoading,\r\n        payload: false\r\n    }\r\n)","export const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dphqgwed4/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try {\r\n        \r\n        const resp = await fetch(cloudUrl, {\r\n            method:'POST',\r\n            body:formData\r\n        })\r\n        if(resp.ok){\r\n            const cloudResp= await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else{\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n    notesSnap.forEach(snapHijo=> {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n    \r\n    return notes;\r\n}","import Swal from 'sweetalert2';\r\nimport { db } from '../firebase/firebase-config';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id,newNote));\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => (\r\n    {\r\n        type: types.notesActive,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n)\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        if (!note.url) {\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire('Saved', note.title, 'success')\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = file => {\r\n    return async (dispatch, getState) => {\r\n        const { active: activeNote } = getState().notes;\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        Swal.close();\r\n\r\n    }\r\n}\r\n\r\nexport const startDeleting = id => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = id => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { types } from '../types/types'\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\r\nimport { uiFinishLoading, uiStartLoading } from './ui'\r\nimport Swal from 'sweetalert2';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(uiStartLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password).then(({ user }) => {\r\n            dispatch(login(user.uid, user.displayName));\r\n            dispatch(uiFinishLoading());\r\n        }).catch(error => {\r\n            console.error(error)\r\n            dispatch(uiFinishLoading());\r\n            Swal.fire('Error', error.message, 'error')\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const startRegistrerWithEmailAndPassword = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(async ({ user }) => {\r\n            await user.updateProfile({\r\n                displayName: name\r\n            });\r\n            dispatch(login(user.uid, user.displayName))\r\n        }).catch(err => Swal.fire('Error', err.message, 'error'))\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n    return async (dispatch) => {\r\n        const { user } = await firebase.auth().signInWithPopup(googleAuthProvider);\r\n        dispatch(login(user.uid, user.displayName))\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n}\r\n)\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(noteLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {  startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui)\r\n\r\n    const { email, password } = formValues\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form\r\n             onSubmit={handleLogin}\r\n             className=\"animate__animated animate__fadeIn animate__faster\"   \r\n                >\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div\r\n                        onClick={handleGoogleLogin}\r\n                        className=\"google-btn\"\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegistrerWithEmailAndPassword } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui)\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const { name, email, password, password2 } = values;\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startRegistrerWithEmailAndPassword(email, password, name));\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError(\"El nombre no puede estar vacio\"));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError(\"El email no es valido\"));\r\n            return false;\r\n        } else if (password !== password2 && password.length < 5) {\r\n            dispatch(setError(\"la contraseña tienen que ser iguales \"));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form\r\n                onSubmit={handleOnSubmit}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                {\r\n                    msgError && <span className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </span>\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\n\r\nexport const JournalEntry = ({id, date, title, body,url} ) => {\r\n    const dispatch = useDispatch();\r\n    const noteDate= moment(date);\r\n\r\n    const handleEntryClick= ()=>{\r\n        dispatch(activeNote(id, {date,title,body,url}));\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__backInRight\"  onClick={handleEntryClick}>\r\n            \r\n          {\r\n              url && \r\n              <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}\r\n            ></div>\r\n          }  \r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                   {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                   {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n    return (\r\n        <div className=\"journal__entries\">\r\n\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                    key={note.id}\r\n                    {...note}\r\n                     />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleAddNote = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\"\r\n                onClick={handleAddNote}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n    const dispatch = useDispatch();\r\n    const {active:note} = useSelector(state => state.notes)\r\n    const handleSave= ()=>{\r\n        dispatch(startSaveNote(note))\r\n    }\r\n\r\n    const handlePictureClick= ()=>{\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange= (e) =>{\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n            <input type=\"file\"\r\n            id=\"fileSelector\"\r\n            name=\"file\"\r\n            style={{display:'none'}}\r\n            onChange={handleFileChange}/>\r\n\r\n            <div>\r\n                <button className=\"btn\"\r\n                onClick={handlePictureClick}>\r\n                    Picture\r\n                </button>\r\n\r\n                <button className=\"btn\" onClick={handleSave}>\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useEffect } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const { active: note } = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const { body, title } = formValues;\r\n    const activeId = useRef(note.id);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (activeId.current !== note.id) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, { ...formValues}));\r\n\r\n    }, [formValues,dispatch])\r\n\r\n\r\n   const handleDelete = ()=>{\r\n    dispatch(startDeleting(note.id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    name=\"title\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    name=\"body\"\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n\r\n                {\r\n                    note.url &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={note.url}\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n                }\r\n\r\n\r\n            </div>\r\n                <button className=\"btn btn-danger\" onClick={handleDelete}>\r\n                    Delete\r\n                </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { useSelector } from 'react-redux';\r\nimport { NothingSelected } from './NothingSelected';\r\n// import { NothingSelected } from './NothingSelected';\r\n\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n \r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n\r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    active ? <NoteScreen /> : <NothingSelected />\r\n                }\r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Route, Redirect } from 'react-router-dom'\r\n\r\nexport const  PrivateRoute = ({ isAuthenticated, component:Component, ...rest}) => {\r\n    return (\r\n      <Route {...rest} \r\n        component={(props)=>(\r\n            (isAuthenticated) \r\n            ? ( <Component { ...props} />)\r\n            : ( <Redirect to=\"/auth/login\" />)\r\n        )}\r\n      \r\n      />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Route, Redirect } from 'react-router-dom'\r\n\r\nexport const  PublicRoute = ({ isAuthenticated, component:Component, ...rest}) => {\r\n    return (\r\n      <Route {...rest} \r\n        component={(props)=>(\r\n            (isAuthenticated) \r\n            ? ( <Component { ...props} />)\r\n            : ( <Redirect to=\"/\" />)\r\n        )}\r\n      \r\n      />\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIN, setIsLoggedIN] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if (user?.uid) {\r\n                setChecking(false);\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIN(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n            } else {\r\n                setIsLoggedIN(false);\r\n                setChecking(false);\r\n            }\r\n\r\n        })\r\n    }, [dispatch, setChecking, setIsLoggedIN])\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={!isLoggedIN}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                        isAuthenticated={isLoggedIN}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note => note.id === action.payload.id ? action.payload.note : note)\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.filter(note => note.id !== action.payload),\r\n                active: null\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                notes: [],\r\n                active: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk))\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n\r\n            }\r\n\r\n        case types.logout:\r\n            return {};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { JournalApp } from './JournalApp';\r\nimport './styles/styles.scss'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <JournalApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}